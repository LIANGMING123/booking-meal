{"version":3,"sources":["components/Forms/Form.module.css","components/Forms/Input/Input.js","components/Forms/FormWrapper/FormWrapper.js","components/Forms/FormHeadText/FormHeadText.js","containers/UserRegister/UserRegister.js"],"names":["module","exports","Form_wrapper","Form_page","Page_form","Form_group","Form_field","Invalid","Page_link","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Form_module_css__WEBPACK_IMPORTED_MODULE_1__","_Form_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","invalid","shouldValidate","touched","push","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","formWrapper","children","formHeadText","user","charAt","toUpperCase","slice","type","UserRegister","state","controls","name","placeholder","validation","required","valid","email","isEmail","phone","isNumeric","password","minLength","confirm_password","formIsValid","handleUserRegister","e","preventDefault","formData","formElementId","_this","onUserSignUp","inputChangeHandler","inputId","formElement","updateObject","target","checkValidity","form","C_Users_TIMI_OLUMOFIN_Desktop_Projects_book_a_meal_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","setState","this","loading","onSetAuthRedirect","_this2","formElements","keys","id","config","authRedirect","userAuthenticated","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","authRedirectPath","_components_Forms_FormWrapper_FormWrapper__WEBPACK_IMPORTED_MODULE_11__","onSubmit","action","method","_components_Forms_FormHeadText_FormHeadText__WEBPACK_IMPORTED_MODULE_12__","_components_Forms_Input_Input__WEBPACK_IMPORTED_MODULE_14__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_components_UI_Loading_Loading__WEBPACK_IMPORTED_MODULE_13__","Fragment","Component","connect","auth","dispatch","data","actions","path"],"mappings":"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","file":"static/js/13.fd255fe5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form_wrapper\":\"Form_Form_wrapper__QqSsD\",\"Form_page\":\"Form_Form_page__7wk-h\",\"Page_form\":\"Form_Page_form__4SeNr\",\"Form_group\":\"Form_Form_group__1phnD\",\"Form_field\":\"Form_Form_field__3UJZr\",\"Invalid\":\"Form_Invalid__2diAN\",\"Page_link\":\"Form_Page_link__1y_3j\"};","import React from \"react\";\r\nimport classes from \"../Form.module.css\";\r\n\r\nconst input = props => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.Form_field];\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\tswitch (props.elementType) {\r\n\t\tcase \"input\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"textarea\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"select\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select className={inputClasses.join(' ')} onChange={props.changed}>\r\n\t\t\t\t\t{props.elementConfig.options.map(option => (\r\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className={classes.Form_group}>\r\n\t\t\t{inputElement}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default input;\r\n","import React from 'react';\r\nimport classes from '../Form.module.css';\r\n\r\nconst formWrapper = (props) => (\r\n  <main className={classes.Form_wrapper}>\r\n    <section className={classes.Form_page}>\r\n      { props.children }\r\n    </section>\r\n  </main>\r\n);\r\n\r\nexport default formWrapper;","import React from 'react';\r\n\r\nconst formHeadText = props => (\r\n  <h3>\r\n    <span className=\"Red\">B</span>ook <span className=\"Red\">A</span> Mea<span className=\"Red\">l</span> {props.user.charAt(0).toUpperCase() + props.user.slice(1)}{' '}\r\n    <span className=\"Red\">{props.type.charAt(0).toUpperCase() + props.type.slice(1)}</span>\r\n  </h3>\r\n);\r\n\r\nexport default formHeadText;\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classes from '../../components/Forms/Form.module.css';\r\nimport FormWrapper from '../../components/Forms/FormWrapper/FormWrapper';\r\nimport FormHeadText from '../../components/Forms/FormHeadText/FormHeadText';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\nimport Input from '../../components/Forms/Input/Input';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\nimport * as actions from '../../store/action/index';\r\n\r\nclass UserRegister extends Component {\r\n  state = {\r\n    controls: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          name: 'name',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          name: 'email',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      phone: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'tel',\r\n          name: 'phone',\r\n          placeholder: 'Your Phone Number'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          name: 'password',\r\n          placeholder: 'Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 7\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      confirm_password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          name: 'confirm_password',\r\n          placeholder: 'Confirm Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 7\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  handleUserRegister = e => {\r\n    e.preventDefault();\r\n    const formData = {};\r\n    for (let formElementId in this.state.controls) {\r\n      formData[formElementId] = this.state.controls[formElementId].value;\r\n    }\r\n    this.props.onUserSignUp(formData);\r\n  };\r\n\r\n  inputChangeHandler = (e, inputId) => {\r\n    const formElement = updateObject(this.state.controls[inputId], {\r\n      value: e.target.value,\r\n      valid: checkValidity(e.target.value, this.state.controls[inputId].validation),\r\n      touched: true\r\n    });\r\n\r\n    const form = updateObject(this.state.controls, {\r\n      [inputId]: formElement\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputId in form) {\r\n      formIsValid = form[inputId].valid && formIsValid;\r\n    }\r\n\r\n    this.setState({ controls: form, formIsValid });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.loading) {\r\n      this.props.onSetAuthRedirect('/menu');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const formElements = Object.keys(this.state.controls).map(key => {\r\n      return {\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      };\r\n    });\r\n    let authRedirect = null;\r\n\r\n    if (this.props.userAuthenticated) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n\r\n    let form = (\r\n      <FormWrapper>\r\n        <form\r\n          onSubmit={this.handleUserRegister}\r\n          action=\"#\"\r\n          method=\"post\"\r\n          className={classes.Page_form}\r\n          id=\"registerForm\"\r\n        >\r\n          <FormHeadText user=\"user\" type=\"register\" />\r\n          {formElements.map(formElement => (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              elementConfig={formElement.config.elementConfig}\r\n              value={formElement.config.value}\r\n              invalid={!formElement.config.valid}\r\n              touched={formElement.config.touched}\r\n              shouldValidate={formElement.config.validation}\r\n              changed={e => this.inputChangeHandler(e, formElement.id)}\r\n            />\r\n          ))}\r\n          <button type=\"submit\">Register</button>\r\n          <p className={classes.Page_link}>\r\n            Already Have an Account? <Link to=\"/login\">Login</Link>\r\n          </p>\r\n          <p className={classes.Page_link}>\r\n            Back to Home? <Link to=\"/\">Click Here</Link>\r\n          </p>\r\n        </form>\r\n      </FormWrapper>\r\n    );\r\n\r\n    if (this.props.loading) {\r\n      form = <Loading />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {authRedirect}\r\n        {form}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    userAuthenticated: state.auth.userAuthenticated,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUserSignUp: data => dispatch(actions.userSignUp(data)),\r\n    onSetAuthRedirect: path => dispatch(actions.setAuthRedirect(path))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserRegister);\r\n"],"sourceRoot":""}